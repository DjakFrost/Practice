{"version":3,"file":"static/js/488.ff06946c.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Component/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css?911e","Component/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","Component/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/Component/Profile/MyPosts/MyPosts.module.css?36f8","webpack://my-app/./src/Component/Profile/MyPosts/Posts/Posts.module.css?37fb","Component/Profile/MyPosts/Posts/Posts.jsx","Component/Profile/MyPosts/MyPosts.jsx","Component/Profile/MyPosts/MyPostsContainer.jsx","Component/Profile/Profile.jsx","Component/Profile/ProfileContainer.jsx","HOC/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"background\":\"ProfileInfo_background__T3aEl\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__F3v0W\",\"aboutMe\":\"ProfileInfo_aboutMe__MJUdb\",\"profileImg\":\"ProfileInfo_profileImg__qx1iO\"};","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() =>{\r\n        setStatus(props.status)\r\n    },\r\n        [props.status])\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \".....\"}  </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport UserImage from \"../../../../assets/images/UserImage.png\"\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner,savePhoto}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const myAvatarPicturesSelected = (e) =>{\r\n        if(e.target.files.length){\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return <div>\r\n        <div className={s.descriptionBlock}>\r\n            <img className={s.profileImg} src={profile.photos.large || UserImage}/>\r\n            {isOwner && <input type={\"file\"} onChange={myAvatarPicturesSelected}/>}\r\n                <ProfileStatusWithHooks status ={status} updateStatus={updateStatus}/>\r\n\r\n            <div>\r\n                <span className={s.aboutMe}>{profile.aboutMe}</span>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__OJrFx\",\"posts\":\"MyPosts_posts__+rr9z\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Posts_content__z7QTL\",\"post\":\"Posts_post__t0zvK\",\"item\":\"Posts_item__UsH8O\"};","import React from \"react\";\r\nimport classes from \"./Posts.module.css\";\r\n\r\n\r\nconst Posts = (props) => {\r\n    return <div className={classes.item}>\r\n                <img src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQkAOCTMsRRjRWRQmZQB9geVQmynJHyQI8G1w&usqp=CAU' />\r\n        {props.message}\r\n        <div>\r\n        <span>like {props.likesCount}</span>\r\n        </div>\r\n            </div>\r\n}\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Posts from \"./Posts/Posts\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nlet maxLength10 = maxLengthCreator(10)\r\n\r\n\r\nfunction MyPosts(props) {\r\n    let postsElement = props.posts\r\n        .map(p => <Posts message={p.message} likesCount={p.likesCount}/>)\r\n\r\n\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.newMessageBody)\r\n    }\r\n    return <div className={s.postsBlock}>\r\n        <h1>My post</h1>\r\n        <div>\r\n            <AddPostFormRedux onSubmit={onAddPost}/>\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postsElement}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst AddPostForm=(props)=>{\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} name=\"newMessageBody\" validate={[required, maxLength10]}/>\r\n            <div><button>Add Post</button></div>\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form:\"profileAddPostForm\"})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreation} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps =(state) =>{\r\n    return{\r\n        posts: state.profile.posts,\r\n        newPostText:state.profile.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n            addPost: (newMessageBody) =>{\r\n                dispatch(addPostActionCreation(newMessageBody))\r\n            }\r\n        }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus} savePhoto={props.savePhoto}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\n\r\nexport function withRouter(Children) {\r\n    return (props) => {\r\n        const match = {params: useParams()}\r\n        return <Children{...props} match={match}/>\r\n    }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n        if (!userId) {\r\n            //переход на логин,если нет никакого идпрофиля, withAuthRedirect убрать\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        savePhoto={this.props.savePhoto}/>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profile.profile,\r\n    status: state.profile.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter)\r\n(ProfileContainer)\r\n\r\n","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\r\n    class RedirectComponent extends  React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Navigate to=\"/login\"/>\r\n            return <Component{...this.props}/>\r\n        }\r\n\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n\r\n    return ConnectAuthRedirectComponent\r\n\r\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","isOwner","savePhoto","Preloader","className","s","src","photos","large","UserImage","type","target","files","length","aboutMe","classes","message","likesCount","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","postsElement","posts","map","p","addPost","newMessageBody","connect","state","newPostText","dispatch","addPostActionCreation","MyPosts","withRouter","Children","match","params","useParams","ProfileContainer","userId","this","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","compose","withAuthRedirect","auth","isAuth","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}