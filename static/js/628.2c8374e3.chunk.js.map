{"version":3,"file":"static/js/628.2c8374e3.chunk.js","mappings":"wKACA,EAA0B,yBAA1B,EAA4D,wBAA5D,EAAmG,8BAAnG,EAAwI,sBAAxI,EAAuK,wB,mBCgBvK,EAZmB,SAACA,GAChB,IAAIC,EAAO,qBAAuBD,EAAME,GACxC,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKC,IAAKL,EAAMM,OAAQC,IAAK,sDAC7B,SAAC,KAAD,CAASC,GAAIP,EAAME,UAAW,SAAAM,GAAC,OAAIA,EAAEC,SAAWN,EAAWA,CAA5B,EAA/B,SACKJ,EAAMW,SAItB,ECHD,EARgB,SAACX,GACb,OACI,gBAAKG,UAAWC,EAAhB,SACKJ,EAAMY,SAGlB,E,iDCLKC,GAAcC,EAAAA,EAAAA,GAAiB,IAarC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAhC,EAXuB,SAAChB,GACpB,OACI,kBAAMiB,SAAWjB,EAAMkB,aAAvB,WACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUV,GAAcW,YAAY,qBAAqBb,KAAK,oBACrG,0BACI,gDAIf,IC6BD,EArCgB,SAACX,GAEb,IAIIyB,EAAczB,EAAMY,QACnBc,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAASf,QAASe,EAAEf,QAASV,GAAIyB,EAAEzB,IAAvC,IAEN0B,EAAiB5B,EAAM6B,QACtBH,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYhB,KAAMgB,EAAEhB,KAAMT,GAAIyB,EAAEzB,GAAII,OAAQqB,EAAErB,QAAlD,IAEV,OAAKN,EAAM8B,QAGP,iBAAK3B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKwB,KAEL,iBAAKzB,UAAWC,EAAhB,UACKqB,GAED,gBAAKtB,UAAWC,EAAhB,UAEI,0BACI,SAAC,EAAD,CAAgBa,SAvBd,SAACc,GACnB/B,EAAMgC,gBAAgBD,EAAOE,eAChC,eAQyB,SAAC,KAAD,CAAUzB,GAAG,UAoB1C,E,oBCfD,GAAe0B,E,QAAAA,KAAQC,EAAAA,EAAAA,KAjBD,SAACC,GACnB,MAAO,CACHP,QAAQO,EAAMC,aAAaR,QAC3BjB,QAAQwB,EAAMC,aAAazB,QAC3B0B,eAAeF,EAAMC,aAAaC,eAEzC,IAEwB,SAACC,GACtB,MAAO,CACHP,gBAAiB,SAACC,GAAoBM,GAASC,EAAAA,EAAAA,GAAuBP,GACrE,EAER,IAImEQ,EAAAA,EAApE,CAAsFC,E,mJCrBlFC,EAA6B,SAACP,GAAD,MAAY,CACzCN,OAAQM,EAAMQ,KAAKd,OADU,EAIpBW,EAAmB,SAACI,GAAe,IAGtCC,EAHqC,0IAIvC,WACI,OAAIC,KAAK/C,MAAM8B,QACR,SAACe,GAAD,UAAcE,KAAK/C,SADI,SAAC,KAAD,CAAUQ,GAAG,UAE9C,KAPsC,GAGVwC,EAAAA,WAYjC,OAJmCb,EAAAA,EAAAA,IAAQQ,EAARR,CAAoCW,EAM1E,C","sources":["webpack://my-app/./src/Component/Dialogs/Dialogs.module.css?ac53","Component/Dialogs/DialogItem/DialogsItem.jsx","Component/Dialogs/Message/Message.jsx","Component/Dialogs/Message/AddMessageForm.js","Component/Dialogs/Dialogs.jsx","Component/Dialogs/DialogsContainer.jsx","HOC/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__y1cay\",\"button\":\"Dialogs_button__RumXJ\",\"dialogsItems\":\"Dialogs_dialogsItems__gCP35\",\"item\":\"Dialogs_item__M3eNt\",\"active\":\"Dialogs_active__t-Zzk\",\"message\":\"Dialogs_message__JKu6a\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = 'DialogItem/Message' + props.id\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <img src={props.avatar} alt ='аватарка'/>\r\n            <NavLink to={path} className={n => n.isActive ? s.active : s.item}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit ={props.handleSubmit}>\r\n            <Field component={Textarea} validate={[required, maxLength50]} placeholder=\"Enter your message\" name=\"newMessageBody\"/>\r\n            <div>\r\n                <button>add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from \"react-router-dom\"\r\nimport AddMessageForm from \"./Message/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let addMessageClick = (values) => {\r\n        props.addMessageClick(values.newMessageBody)\r\n    }\r\n\r\n    let messageUser = props.message\r\n        .map(d => <Message message={d.message} id={d.id}/>)\r\n\r\n    let dialogElements = props.dialogs\r\n        .map(d => <DialogItem name={d.name} id={d.id} avatar={d.avatar}/>)\r\n\r\n    if (!props.isAuth) return <Navigate to=\"/login\"/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.dialogsItems}>\r\n                {messageUser}\r\n\r\n                <div className={s.button}>\r\n\r\n                    <div>\r\n                        <AddMessageForm onSubmit={addMessageClick}/>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {addMessageActionCreate} from \"../../Redux/messagesPage-Reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs:state.messagesPage.dialogs,\r\n        message:state.messagesPage.message,\r\n        newMessageText:state.messagesPage.newMessageText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessageClick: (newMessageBody) => {dispatch(addMessageActionCreate(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(Dialogs)","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\r\n    class RedirectComponent extends  React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Navigate to=\"/login\"/>\r\n            return <Component{...this.props}/>\r\n        }\r\n\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n\r\n    return ConnectAuthRedirectComponent\r\n\r\n}"],"names":["props","path","id","className","s","src","avatar","alt","to","n","isActive","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","messageUser","map","d","dialogElements","dialogs","isAuth","values","addMessageClick","newMessageBody","compose","connect","state","messagesPage","newMessageText","dispatch","addMessageActionCreate","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}